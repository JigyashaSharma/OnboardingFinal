trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  appName: 'TalentAppWebApp20250102164245' # Change to your actual Azure App Service name
  packagePath: '$(Build.ArtifactStagingDirectory)/WebApp.zip'

steps:
- task: UseNode@1
  inputs:
    version: '20.x'  # Use the version compatible with your project

- script: |
    cd sdonboarding.client  # Change to your React project directory
    npm install
    npm run build
  displayName: 'Build React App'

- task: CopyFiles@2
  inputs:
    SourceFolder: 'sdonboarding.client/build'  # Adjust based on your React build output folder
    Contents: '**'
    TargetFolder: '$(Build.SourcesDirectory)/wwwroot'  # Copy React files to backend's wwwroot

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(packagePath)" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# Publish the build artifacts (WebApp.zip) for deployment
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(packagePath)'
    artifactName: 'drop'

# Deploy to Azure App Service
- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure subscription 1' # Replace with your service connection
    appType: 'webApp'
    WebAppName: '$(appName)'
    package: '$(Build.ArtifactStagingDirectory)/WebApp.zip'
